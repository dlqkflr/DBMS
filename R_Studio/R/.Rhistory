df <- read.csv("./20190626/income.csv", header = TRUE, stringsAsFactors = FALSE)
str(df)
options(repos = c(CRAN = 'https://cloud.r-project.org'))
install.packages('dplyr', repos = 'https://cloud.r-project.org')
install.packages("dplyr", repos = "https://cloud.r-project.org")
install.packages("dplyr", repos = "https://cloud.r-project.org")
install.packages("dplyr", repos = "https://cloud.r-project.org")
install.packages("dplyr", repos = "https://cloud.r-project.org")
install.packages("dplyr", repos = "https://cloud.r-project.org")
install.packages("dplyr", repos = "https://cloud.r-project.org")
install.packages("dplyr", repos = "https://cloud.r-project.org")
install.packages("dplyr", repos = "https://cloud.r-project.org")
library(dplyr)
library(dplyr)
dplyr
df
sample_n(df,3)
sample_frac(df, 0.1)
df2 <- distinct(df)
df2
df <- read.csv("./20190626/income.csv", header = TRUE, stringsAsFactors = FALSE)
str(df)
select(df,Index,State:Y2008)
select(df,Index)
select(df,Index,State)
select(df, State)
select(df, -Index, -State)
select(df, -c(Index,State))
select(df, sstarts_with("Y"))
select(df, starts_with("Y"))
select(df, -starts_with("Y"))
select(df, contains("I"))
select(df, State, everything())
#rename
rename(df, Index2 = Index)
df
#rename
rename(df, Index2 = Index)
df2 <- rename(df, Index2 = Index)
names(df2
names(df2)
names(df2)
#filter
filter(df, Index == 'A')
filter(df, Index %in% "A")
filter(df, Index %in% c("A","C"))
filter(df, Index %in% c("A","C") & Y2002 >= 1400000)
filter(df, !Index %in% c("A","C"))
#regular expression
filter(df, grepl("Ar",state))
#regular expression
filter(df, grepl("Ar",State))
summarise(df, Y2015_mean = mean(Y2015))
summarise(df, Y2015_mean = mean(Y2015),
Y2015_median = median(Y2015))
arrange(df, Index)
df3 <- select(df, Index)
df3
df4 <- arrange(df3, Index)
head(df4)
df5 <- arrange(df3, desc(Index))
df5
head(df5)
df6 <- select(df,Index, State)
df6
df7<- arrange(df6, desc(Index), State)
df7
dssd
group_by(df, Index)
summarise_at(group_by(df, Index))
summarise_at(group_by(df, Index),
vars(Y2011,Y2012))
group_by(df, Index)
View(Df)
View(df)
head(df,5)
tail(df,5)
# Pipe operator %>%
# magrittr
library(magrittr)
detach("package:magrittr", unload = TRUE)
library(magrittr)
df %>% select(Index, State)
df_temp = sample_n(select(df,Index, State),10)
df_temp
df %>% select(Index, State) %>% sample_n(10)
df10 <- read.csv("./20190626/exam.csv")
str(df10)
df10
filter(df10, class == 1)
df10 %>% filter(class ==1)
df10 %>% filter(class ==1) %>% arrange(math)
filter(select(df10, class, math, english), class ===1)
filter(select(df10, class, math, english), class ==1)
source('C:/Users/user/Desktop/R_Studio/R/20190626/06.26', encoding = 'UTF-8', echo=TRUE)
install.packages("dplyr", repos = "https://cloud.r-project.org")
df10 %>%
select(class, math, english) %>%
filter(class ==1) %>%
arrange(math)
df10 %>%
filter(class %in% c(1,3,5)) %>%
arrange(desc(english))
df10
a <- 10
if(is.integer(a)) {
print("X is an Integer")
}
a1 <- 10L
if(is.integer(a1)) {
print("X is an Integer")
}
a <- 10
if(is.integer(a)) {
print("X is an Integer")
}
mode(a)
class(a)
a2 <- c("What","is","truth")
if("Truth" %in% a2){
print("True")
} else {
print("False")
}
a2 <- c("What","is","Truth")
if("Truth" %in% a2){
print("True")
} else {
print("False")
}
a3 <- switch(3, "One", "Two","Three","Four")
a3
source('C:/Users/user/Desktop/R_Studio/R/20190626/06.26', encoding = 'UTF-8')
install.packages("dplyr", repos = "https://cloud.r-project.org")
a4 <- c("Hello", "R loop")
cnt <- 2
repeat {
print(a4)
cnt <- cnt +1
if(cnt>5){
break;
}
}
a5<- c("Hello", "R loop")
a5<- c("Hello", "R loop")
cnt <- 2
while(cnt <7) {
print(a5)
cnt <- cnt + 1
}
a5<- c("Hello", "R loop")
cnt <- 2
while(cnt <7) {
print(a5)
cnt = cnt + 1
}
cnt
a6 <- LETTERSp[1:4]
a6 <- LETTERS[1:4]
a6
a7 <- letters[1:4]
a7
print(i)
for(i in a6){
print(i)
}
print(seq(1,100))
myfunc <- function(a) {
for(i in 1:a){
b <- i*2
print(b)
}
}
myfunc(10)
myfunc2 <- function(){
for(i in 1:5){
print(i *2)
}
}
myfunc2()
myfunc3 <- function(a,b){
r <- a+b
print(r)
}
myfunc3(1,2)
myfunc3(a=1,b=2)
myfunc3(b=2,a=1)
myfunc3(1,b=3)
myfunc4 <- function(a=0, b=0){
r <- a+b
print(r)
}
myfunc4
myfunc4()
myfunc4(a=1)
myfunc4(1)
myfunc4(b=2)
myfunc5 <- function(a){c <- a}
myfunc5(1)
c
print(c)
myfunc5 <- function(a){c <- a}
myfunc5(1)
print(c)
df <-read.csv("exam.csv")
df <-read.csv("./20190626/exam.csv")
str(df)
df
df %>%
select(id, class,math) %>%
filter(class ==1) %>%
arrange(desc(id))
df %>%
arrange(id)
df %>%
arrange(class, desc(id))
df %>%
arrange(class, desc(id)) %>%
head(5)
df %>%
arrange(class, desc(id)) %>%
mutate(total = math + english + science)
df %>%
arrange(class, desc(id)) %>%
mutate(total = math + english + science,
mean = ( math + english + science)/3)
library(assertthat)
detach("package:assertthat", unload = TRUE)
# group_by
df
df %>%
group_by(class)
df %>%
group_by(class) %>%
summarise(mean_math = mean(math))
df %>%
group_by(class) %>%
summarise(mean_math = mean(math),
median_math = median(math))
df %>%
group_by(class) %>%
summarise(mean_math = mean(math),
median_math = median(math),
sum_math = sum(math))
df %>%
group_by(class) %>%
summarise(mean_math = mean(math),
median_math = median(math),
sum_math = sum(math),
count_math = n(math))
df %>%
group_by(class) %>%
summarise(mean_math = mean(math),
median_math = median(math),
sum_math = sum(math),
count_math = n(math))
source('C:/Users/user/Desktop/R_Studio/R/20190626/06.26', encoding = 'UTF-8', echo=TRUE)
install.packages("dplyr", repos = "https://cloud.r-project.org")
df %>%
group_by(class) %>%
summarise(mean_math = mean(math),
median_math = median(math),
sum_math = sum(math),
count_math = n())
ggplot2::mpg
mpg <- as.data.frame(ggplot2::mpg)
mpg
str(mpg)
select(mpg, class)
mpg %>%
group_by(class) %>%
summarise(mean_cty = mean(cty))
mpg %>%
group_by(manufacturer) %>%
summarise(mean_hwy = mean(hwy)) %>%
arrange(desc(mean_hwy)) %>%
head(5)
head(mpg,1)
mpg %>%
filter(manufacturer= "audi" | "toyouta")
mpg %>%
filter(manufacturer== "audi" | "toyouta")
mpg %>%
filter(manufacturer == "audi")
mpg %>%
filter(manufacturer == "audi" | "toyota")
mpg %>%
filter(manufacturer == "toyota")
mpg %>%
filter(manufacturer == c("audi","toyota"))
mpg %>%
filter(manufacturer == c("audi","toyota")) %>%
group_by(manufacturer) %>%
summarise(mean_cty = mean(cty))
mpg %>%
filter(displ >= 5)
mpg %>%
filter(manufacturer == c("chevrolet","ford","honda")) %>%
group_by(manufacturer) %>%
summarise(mean_hwy = mean(hwy))
mpg_copy <- mpg %>%
mutate(totaly = cty + hwy)
mpg_copy
mpg_copy %>%
mutate(mean_totaly = totaly/2)
mpg_copy %>%
mutate(mean_totaly = totaly/2) %>%
arrange(desc(mean_totaly)) %>%
head(3)
mpg %>%
select(class, cty)
mpg %>%
select(class, cty) %>%
filter(class == c("suv", "compact")) %>%
group_by(class) %>%
summarise(mean_cty = mean(cty))
head(mpg,1)
mpg %>%
filter(class == 'compact') %>%
group_by(manufacturer) %>%
summarise(count = n())
mpg %>%
filter(class == 'compact') %>%
group_by(manufacturer) %>%
summarise(count = n()) %>%
arrange(desc(count))
mpg %>%
group_by(c(displ >= 5, displ <= 4)) %>%
summarise(mean_hwy = mean(hwy)
mpg %>%
mutate(if(displ >= 5){displ_rate = '5high'})if(displ <= 4){displ_rate = '4low'}
mpg %>%
mutate(if(displ >= 5){displ_rate = '5high'}if(displ <= 4){displ_rate = '4low'})
mpg %>%
mutate(if(displ >= 5){displ_rate = '5high'},(displ <= 4){displ_rate = '4low'})
mpg %>%
mutate(if(displ >= 5){displ_rate = '5high'}(displ <= 4){displ_rate = '4low'})
mpg %>%
select(displ)
mpg %>%
filter(displ <= 5)
mpg %>%
filter(displ >= 5 | displ <= 4)
mpg %>%
filter(displ >= 5 | displ <= 4) %>%
if(displ <=4){
mutate(hwy_rate = '4low')
} else {
mutate(hwy_rate = '5high')
}
mpg %>%
filter(displ >= 5 | displ <= 4)
mpg %>%
filter(displ >= 5 | displ <= 4) %>%
group_by(displ <= 4)
mpg %>%
filter(displ >= 5 | displ <= 4) %>%
group_by(displ <= 4) %>%
summarise(mean_hwy = mean(hwy))
mpg_copy <- mpg %>%
mutate(totaly = cty + hwy)
mpg_copy
mpg %>%
group_by(displ <= 4) %>%
group_by(displ >= 5) %>%
filter(displ <= 4 | displ >= 5) %>%
summarise(mean_hwy = mean(hwy))
mpg %>%
filter(displ >= 5 | displ <= 4) %>%
group_by(displ <= 4) %>%
summarise(mean_hwy = mean(hwy))
mpg %>%
filter(manufacturer == c("chevrolet","ford","honda")) %>%
group_by(manufacturer) %>%
summarise(mean_hwy = mean(hwy))
mpg %>%
filter(manufacturer == c("audi","toyota")) %>%
group_by(manufacturer) %>%
summarise(mean_cty = mean(cty))
mpg %>%
select(manufacturer, cty) %>%
filter(manufacturer == "audi" | manufacturer =="toyota") %>%
group_by(manufacturer) %>%
summarise(mean_cty = mean(cty))
mpg %>%
filter(manufacturer == c("audi","toyota"))
mpg %>%
select(manufacturer, cty) %>%
filter(manufacturer == "audi" | manufacturer =="toyota")
mpg
mpg <- as.data.frame(ggplot2::mpg)
mpg
mpg
View(mpg)
mpg %>%
filter(manufacturer == c("audi","toyota"))
mpg %>%
select(manufacturer, cty) %>%
filter(manufacturer == "audi" | manufacturer =="toyota")
mpg %>%
#select(manufacturer, cty) %>%
filter(manufacturer == "audi" | manufacturer =="toyota")
mpg %>%
filter(manufacturer %in% c("audi","toyota"))
mpg %>%
filter(manufacturer %in% c("chevrolet","ford","honda")) %>%
group_by(manufacturer) %>%
summarise(mean_hwy = mean(hwy))
source('C:/Users/user/Desktop/R_Studio/R/20190626/06.26', encoding = 'UTF-8')
install.packages("dplyr", repos = "https://cloud.r-project.org")
source('C:/Users/user/Desktop/R_Studio/R/20190626/06.26', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
library(tidyverse)
mtcars
library(tidyverse)
mtcars
ggplot(mtcars) + geom_point(mapping =  aes(x= mpg, y= disp))
mtcars
ggplot(mtcars) + geom_point(mapping =  aes(x= mpg, y= disp))
library(tidyverse)
mtcars
mtcars
data <- mtcars[,c('wt','mpg')]
data
p + geom_point() + geom_line() + geom_smooth(method = "lm",
formula = y ~ poly(x,2))
p <- ggplot(mtcars, mapping =  aes(x= mpg, y= disp))
p + geom_point() + geom_line() + geom_smooth(method = "lm",
formula = y ~ poly(x,2))
ggplot(mtcars) + geom_point(mapping =  aes(x= mpg, y= disp))
ggplot(data) + geom_point(mapping =  aes(x= mpg, y= disp))
ggplot(data) + geom_point(mapping =  aes(x= mpg, y= wt))
ggplot(data = airlineData, mapping = aes(x = ArrDelay, y = DepDelay)) +
geom_point(alpha = 1/50) +
geom_smooth(color = "red") +
facet_wrap( ~ MonthName, nrow = 3) +
xlab("Arrival Delay (minutes") +
ylab("Departure Delay (minutes)")
ggplot(data) + geom_point(mapping =  aes(x= mpg, y= wt))
ggplot(mtcars, mapping =  aes(x= disp, y= mpg,
color = factor(am, levels =  c(0,1),
labels =  c("Automatic", "Manual")))) +
scale_color_manual(values = c("blue", "yellow")) +
geom_point()+
labs(color = "Transmission")
ggplot(data) + geom_point(mapping =  aes(x= mpg, y= wt))
